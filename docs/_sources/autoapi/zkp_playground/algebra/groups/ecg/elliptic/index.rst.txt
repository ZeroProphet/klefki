:mod:`zkp_playground.algebra.groups.ecg.elliptic`
=========================================

.. py:module:: zkp_playground.algebra.groups.ecg.elliptic


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   zkp_playground.algebra.groups.ecg.elliptic.EllipticCurveGroup
   zkp_playground.algebra.groups.ecg.elliptic.PairFriendlyEllipticCurveGroup
   zkp_playground.algebra.groups.ecg.elliptic.EllipicCyclicSubgroup
   zkp_playground.algebra.groups.ecg.elliptic.JacobianGroup



.. py:class:: EllipticCurveGroup(*args)

   Bases: :class:`zkp_playground.algebra.abstract.Group`

   A monoid in which every element has an inverse is called group.

   .. attribute:: A
      

      

   .. attribute:: B
      

      

   .. method:: from_JacobianGroup(self, o)


   .. method:: from_list(self, o)


   .. method:: from_int(self, o)


   .. method:: from_tuple(self, o)


   .. method:: op(self, g)

      The Operator for obeying axiom `associativity` (2)


   .. method:: inverse(self)

      Implement for axiom `inverse`


   .. method:: identity(cls)
      :classmethod:

      The value for obeying axiom `identity` (3)


   .. method:: x(self)
      :property:


   .. method:: y(self)
      :property:



.. py:class:: PairFriendlyEllipticCurveGroup(*args)

   Bases: :class:`zkp_playground.algebra.groups.ecg.elliptic.EllipticCurveGroup`

   A monoid in which every element has an inverse is called group.

   .. attribute:: e
      

      

   .. attribute:: F
      

      

   .. method:: pairing(cls, P, Q)
      :property:


   .. method:: e(cls, P, Q)
      :classmethod:



.. py:class:: EllipicCyclicSubgroup(*args)

   Bases: :class:`zkp_playground.algebra.groups.ecg.elliptic.EllipticCurveGroup`

   With Lagrange's therem
   the order of a subgroup is a divisor of the order of the parent group

   .. attribute:: N
      

      

   .. method:: scalar(self, times)



.. py:class:: JacobianGroup(*args)

   Bases: :class:`zkp_playground.algebra.abstract.Group`

   A monoid in which every element has an inverse is called group.

   .. attribute:: A
      

      

   .. attribute:: B
      

      

   .. method:: craft(self, o)

      Automatic lookup method like `from_{type}` of Class Object.


   .. method:: double(self, n=None)


   .. method:: identity(cls)
      :classmethod:

      The value for obeying axiom `identity` (3)


   .. method:: inverse(self)

      Implement for axiom `inverse`


   .. method:: op(self, g)

      The Operator for obeying axiom `associativity` (2)




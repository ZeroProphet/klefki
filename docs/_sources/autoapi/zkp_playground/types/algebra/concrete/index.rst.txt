:mod:`zkp_playground.types.algebra.concrete`
====================================

.. py:module:: zkp_playground.types.algebra.concrete


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   zkp_playground.types.algebra.concrete.FiniteFieldSecp256k1
   zkp_playground.types.algebra.concrete.FiniteFieldCyclicSecp256k1
   zkp_playground.types.algebra.concrete.EllipticCurveGroupSecp256k1
   zkp_playground.types.algebra.concrete.JacobianGroupSecp256k1
   zkp_playground.types.algebra.concrete.FiniteFieldSecp256r1
   zkp_playground.types.algebra.concrete.FiniteFieldCyclicSecp256r1
   zkp_playground.types.algebra.concrete.EllipticCurveGroupSecp256r1
   zkp_playground.types.algebra.concrete.JacobianGroupSecp256r1
   zkp_playground.types.algebra.concrete.EllipticCurveCyclicSubgroupSecp256r1
   zkp_playground.types.algebra.concrete.EllipticCurveGroupSecp256r1



.. py:class:: FiniteFieldSecp256k1(*args)

   Bases: :class:`zkp_playground.types.algebra.fields.FiniteField`

   .. attribute:: P
      

      


.. py:class:: FiniteFieldCyclicSecp256k1(*args)

   Bases: :class:`zkp_playground.types.algebra.fields.FiniteField`

   .. attribute:: P
      

      


.. py:class:: EllipticCurveGroupSecp256k1(*args)

   Bases: :class:`zkp_playground.types.algebra.groups.EllipticCurveGroup`

   y^2 = x^3 + A * x + B

   .. attribute:: N
      

      

   .. attribute:: A
      

      

   .. attribute:: B
      

      

   .. method:: x(self)
      :property:


   .. method:: y(self)
      :property:


   .. method:: op(self, g)

      The Operator for obeying axiom `associativity` (2)



.. py:class:: JacobianGroupSecp256k1(*args)

   Bases: :class:`zkp_playground.types.algebra.groups.JacobianGroup`

   .. attribute:: __slots__
      :annotation: = []

      

   .. attribute:: A
      

      

   .. attribute:: B
      

      


.. py:class:: FiniteFieldSecp256r1(*args)

   Bases: :class:`zkp_playground.types.algebra.fields.FiniteField`

   .. attribute:: __slots__
      :annotation: = []

      

   .. attribute:: P
      

      


.. py:class:: FiniteFieldCyclicSecp256r1(*args)

   Bases: :class:`zkp_playground.types.algebra.fields.FiniteField`

   .. attribute:: __slots__
      :annotation: = []

      

   .. attribute:: P
      

      


.. py:class:: EllipticCurveGroupSecp256r1(*args)

   Bases: :class:`zkp_playground.types.algebra.groups.EllipticCurveGroup`

   .. attribute:: __slots__
      :annotation: = []

      

   .. attribute:: A
      

      

   .. attribute:: B
      

      


.. py:class:: JacobianGroupSecp256r1(*args)

   Bases: :class:`zkp_playground.types.algebra.groups.JacobianGroup`

   .. attribute:: __slots__
      :annotation: = []

      

   .. attribute:: A
      

      

   .. attribute:: B
      

      


.. py:class:: EllipticCurveCyclicSubgroupSecp256r1(*args)

   Bases: :class:`zkp_playground.types.algebra.groups.EllipicCyclicSubgroup`

   With Lagrange's therem
   the order of a subgroup is a divisor of the order of the parent group

   .. attribute:: N
      

      

   .. attribute:: A
      

      

   .. attribute:: B
      

      


.. py:class:: EllipticCurveGroupSecp256r1(*args)

   Bases: :class:`zkp_playground.types.algebra.groups.EllipticCurveGroup`

   .. attribute:: A
      

      

   .. attribute:: B
      

      

   .. attribute:: G
      

      


